Ch. 5


1. How to turn this host-to-host packet delivery service into a process-to-process communication channel (Transport layer)? -UDP, 
-Reliable bytestream (TCP), 
-RPC
-transport protocols that use ports to indirectly specify a channel for sending and receiving between processes.


2. What does UDP do?
-Multiplexes to allow processes on a host to share network, using ports.
-checksum error detection.


3. What features toes TCP have?
-Guarantees reliable, in-order delivery of byte stream
-full-duplex
-flow control (limits sender)
-multiplexes like UDP
-congestion control


4. Explain the difference between flow and congestion control:
-flow control: end-to-end issue, prevents sender overloading receiver buffer
-congestion control: host-network issue, prevents excess injection into network overflowing switches/links


5. How does TCP sliding window differ from link-level?
1.logical connections over internet requiring establishment and teardown phases.
2.Retransmission timeout mechanism must be adaptive to variable latency.
3.Needs to handle receiving old packets 
4.Must learn buffer size of other side (flow control)


6. What are 3 purposes of TCP’s sliding window alg?
-1.guarantees reliable delivery
-2.ensures order of data
-3.flow control between sender and receiver


7. In TCP sliding window, how does sender know when AdvertisedWindow is no longer 0 if it’s not receiving acks, since it is blocked?
Sender sends Zero Window Probes every 5-60s to get an ack containing the AdvertisedWindow.


8. How do you fix silly window syndrome?
Nagle’s alg: don’t send if data is in transit, wait for ACK.


9. What is adaptive retransmission? How improve original implementation?
Timeout adjusts to latency and jitter. Karn/Partidge, Jacobson/Karels.




10. What is Karn/Partridge Alg?
-Don’t measure RTT from retransmissions. 
-Double timeout after each retransmission.


11. What is Jacobson/Karels?
More variance in RTT -> timeout more based on deviation than estimatedRTT


12. What is RPC?
Transport protocol with message identification, fragmentation/reassembly, reliability, marshalling.